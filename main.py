import logging
import asyncio
from contextlib import suppress
from aiogram import Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from bot.handlers.auth_handlers import router as auth_router
from bot.handlers.give_tg_handler import router as give_tg_router
from bot.handlers.take_tg_handler import router as take_rg_router
from bot.handlers.start_handler import router as start_router
from bot.handlers.view_tg_handdler import router as view_tg_router
from bot.handlers.info_handlers import router as info_chat_router
from bot.middlewares.auth_middleware import AuthMiddleware
from bot.callbacks.callbacks import router as callback_router
from bot.core.bot_instance import bot
from bot.monitoring.telethon_service import run_monitoring, active_clients

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
monitoring_task: asyncio.Task | None = None

async def on_startup():
    global monitoring_task
    logger.info("–ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (Telethon)")
    monitoring_task = asyncio.create_task(run_monitoring())

async def on_shutdown():
    """ –≠—Ç–æ—Ç –∫–æ–ª–±—ç–∫ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω aiogram –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞"""
    global monitoring_task
    logger.info("–û—Å—Ç–∞–Ω–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (Telethon)")
    if monitoring_task:
        monitoring_task.cancel()
        with suppress(asyncio.CancelledError):
            await monitoring_task
    
    for acc_id, client in list(active_clients.items()):
        if client.is_connected():
            await client.disconnect()
        active_clients.pop(acc_id, None)
    logger.info("–í—Å–µ Telethon-–∫–ª–∏–µ–Ω—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã")


async def main():
    dp = Dispatcher(storage=MemoryStorage())
    dp.message.middleware(AuthMiddleware())
    dp.include_router(auth_router)
    dp.include_router(start_router)
    dp.include_router(give_tg_router)
    dp.include_router(take_rg_router)
    dp.include_router(view_tg_router)
    dp.include_router(info_chat_router)
    dp.include_router(callback_router)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–ª–±—ç–∫–∏ —Å—Ç–∞—Ä—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)

    logger.info("Routers are connected.")

    await on_startup()
    await dp.start_polling(bot)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë Bot stopping by Ctrl+C")
