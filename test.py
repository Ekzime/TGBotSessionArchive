import os
import asyncio

from telethon import TelegramClient
from telethon.sessions import StringSession
from telethon.errors import SessionPasswordNeededError, PasswordHashInvalidError

API_ID = "22603992"
API_HASH = "78e2d35ead5467e121674e9795316d4d"
SESSION_FILE = "session.txt"

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
if os.path.exists(SESSION_FILE):
    with open(SESSION_FILE, "r", encoding="utf-8") as file:
        session_str = file.read().strip()
    client = TelegramClient(StringSession(session_str), API_ID, API_HASH)
    print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å–µ—Å—Å–∏—é...", flush=True)
else:
    client = TelegramClient(StringSession(), API_ID, API_HASH)

async def main():
    await client.connect()
    print("‚úÖ –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!", flush=True)

    if not await client.is_user_authorized():
        phone = input("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ").strip()
        sent_code = await client.send_code_request(phone)

        code = input("üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: ").strip()
        try:
            print("‚è≥ –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –±–µ–∑ 2FA...", flush=True)
            await client.sign_in(phone=phone, code=code, phone_code_hash=sent_code.phone_code_hash)
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –±–µ–∑ 2FA!", flush=True)
        except SessionPasswordNeededError:
            print("‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è 2FA!", flush=True)
            password = input("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA: ").strip()

            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º `asyncio.wait_for()`, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç –Ω–∞ –≤—Ö–æ–¥ —Å 2FA
                await asyncio.wait_for(client.sign_in(password=password), timeout=10)
                print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ —Å 2FA!", flush=True)
            except PasswordHashInvalidError:
                print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å 2FA!", flush=True)
                return
            except asyncio.TimeoutError:
                print("‚ùå –û—à–∏–±–∫–∞: Telegram –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", flush=True)
                return
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —Å 2FA: {e}", flush=True)
                return

        if client.session.save():
            try:
                with open(SESSION_FILE, "w", encoding="utf-8") as file:
                    file.write(client.session.save())
                print("\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ session.txt", flush=True)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª: {e}", flush=True)
        else:
            print("‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –±—ã–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.", flush=True)

        # ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª
        session_str = client.session.save()
        try:
            with open(SESSION_FILE, "w", encoding="utf-8") as file:
                file.write(session_str)
            print("\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.", flush=True)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª: {e}", flush=True)

    else:
        print("\n‚úÖ –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!", flush=True)

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    me = await client.get_me()
    print(f"\nüë§ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫: {me.first_name} (@{me.username})", flush=True)

with client:
    client.loop.run_until_complete(main())
